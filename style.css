/* utils */
@import url("https://fonts.googleapis.com/css2?family=Karla:wght@500;600;900&display=swap");
:root {
  --fw-500: 500;
  --fw-600: 600;
  --fw-900: 900;
  --fs-100: 0.65rem;
  --fs-300: 0.8125rem;
  --fs-600: 1.125rem;
  --fs-900: 1.5rem;
  --clr-violet: hsl(263, 55%, 52%);
  --clr-dark_blue: hsl(217, 19%, 35%);
  --clr-blackish_blue: hsl(219, 29%, 14%);
  --clr-light: hsl(0, 0%, 100%);
  --clr-gray: hsl(0, 0%, 81%);
  --clr-grayish-blue: hsl(210, 46%, 95%);
}
/* reset */
/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
    2. Remove default margin
  */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}
/*
    3. Allow percentage-based heights in the application
  */
html,
body {
  height: 100%;
  overflow-x: hidden;
  scroll-behavior: smooth;
}
/* 5. Improve text rendering and add line height */
body {
  line-height: 1.1;
  -webkit-font-smoothing: antialiased;
  min-height: 100vh;
  font-family: "Karla", sans-serif;
}
/*6. Improve media defaults*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*8. Avoid text overflows*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*9. Create a root stacking context*/
#root,
#__next {
  isolation: isolate;
}
/* 10 Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}
/* 11 Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}
/* 12 A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}
/* 13 Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* css */
/* general styles */
body {
  background-color: var(--clr-grayish-blue);
  color: var(--clr-light);
  max-width: 50ch;
}
img {
  border-radius: 50%;
  width: 35px;

  border: 2px solid var(--clr-gray);
}
h2 {
  font-weight: var(--fw-900);
  font-size: var(--fs-600);
}
p {
  color: var(--clr-gray);
  line-height: 1.3;
  margin: 1rem 0 1rem 0;
  font-size: var(--fs-100);
}
/* container */
.container {
  padding: 4rem 2rem;
  display: grid;
  gap: 1.5rem;
}

.wrapper {
  padding: 1rem 2rem;
  border-radius: 0.5rem;
  box-shadow: 0px 5px 10px hsl(0 0% 0% /0.2);
}
.first {
  background-color: var(--clr-violet);
  background-image: url(./images/bg-pattern-quotation.svg);
  background-position: right 1rem top;
  background-repeat: no-repeat;
}
.first img {
  border: 2px solid var(--clr-violet);
}
.second {
  background-color: var(--clr-dark_blue);
}
.third {
  background-color: var(--clr-light);
  color: var(--clr-dark_blue);
}
.third p {
  color: var(--clr-blackish_blue);
}
.fourth {
  background-color: var(--clr-blackish_blue);
}
.fourth img {
  border: 2px solid var(--clr-violet);
}
.fifth {
  background-color: var(--clr-light);
  color: var(--clr-blackish_blue);
}
.fifth img {
  border: 2px solid var(--clr-gray);
}
.fifth p {
  color: var(--clr-blackish_blue);
  opacity: 0.8;
}
.images {
  display: grid;
  grid-template-columns: 1fr 5fr;
  gap: 0.1rem;
  align-items: center;
  margin: 0 0 0.5rem 0;
}
.name {
  display: flex;
  margin: 0.5rem 0 0.5rem 0;
  font-size: var(--fs-100);
  flex-direction: column;
  font-weight: var(--fw-600);
}
span {
  font-weight: var(--fw-500);
  color: var(--clr-gray);
}

/* media query */
@media (max-width: 340px) {
  .images {
    gap: 1rem;
  }
  .name {
    font-size: xx-small;
  }
}
@media (500px<width<1000px) {
  body {
    max-width: fit-content;
  }
  .container {
    grid-template-columns: 1fr 1fr;
  }
}
@media (min-width: 1000px) {
  body {
    max-width: fit-content;
    justify-content: center;
    display: grid;
    align-items: center;
  }
  p {
    font-size: var(--fs-300);
  }
  .container {
    grid-template-areas:
      "first first second fifth"
      "third fourth fourth fifth";
    padding: 1.5rem 3rem;
  }
  .first {
    grid-area: first;
  }

  .second {
    grid-area: second;
  }
  .third {
    grid-area: third;
  }
  .fourth {
    grid-area: fourth;
  }
  .fifth {
    grid-area: fifth;
  }
  .fifth p {
    max-width: 40ch;
  }
}
